setwd("/media/matthieu/Data/Matthieu/##Etude/#M1/S2/DataScience/Fashion-MNIST")
library("FactoMineR")
library("corrplot")
library("factoextra")
library("fields")
# load image files
load_image_file = function(filename) {
ret = list()
f = file(filename, 'rb')
readBin(f, 'integer', n = 1, size = 4, endian = 'big')
n    = readBin(f, 'integer', n = 1, size = 4, endian = 'big')
nrow = readBin(f, 'integer', n = 1, size = 4, endian = 'big')
ncol = readBin(f, 'integer', n = 1, size = 4, endian = 'big')
x = readBin(f, 'integer', n = n * nrow * ncol, size = 1, signed = FALSE)
close(f)
data.frame(matrix(x, ncol = nrow * ncol, byrow = TRUE))
}
# load label files
load_label_file = function(filename) {
f = file(filename, 'rb')
readBin(f, 'integer', n = 1, size = 4, endian = 'big')
n = readBin(f, 'integer', n = 1, size = 4, endian = 'big')
y = readBin(f, 'integer', n = n, size = 1, signed = FALSE)
close(f)
y
}
# load images
train_x = load_image_file("Dataset/train-images-idx3-ubyte")
test_x  = load_image_file("Dataset/t10k-images-idx3-ubyte")
# load labels
train_y = as.factor(load_label_file("Dataset/train-labels-idx1-ubyte"))
test_y = as.factor(load_label_file("Dataset/t10k-labels-idx1-ubyte"))
train_xy = cbind(train_x, train_y)
test_xy = cbind(test_x, test_y)
label_col = 785
# Compute PCA
resPCA <- PCA(train_xy, quali.sup = label_col, scale.unit = FALSE)
# Images reconstruction
rec <- reconst(resPCA)
index <- c(2, 17, 6, 4, 20, 9, 19, 7, 24, 1)
rec <- rec[index,]
normalize <- function(x){
print(x)
}
apply(rec, MARGIN = 1, FUN = normalize)
i <- 0
normalize <- function(x){
print(i)
i <- i + 1
}
apply(rec, MARGIN = 1, FUN = normalize)
normalize <- function(x){
length(x)
}
apply(rec, MARGIN = 1, FUN = normalize)
normalize <- function(x){
print(length(x))
}
apply(rec, MARGIN = 1, FUN = normalize)
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec_norm <- apply(rec, MARGIN = 1, FUN = normalize)
max(rec)
max(rec_norm)
min(rec_norm)
min(rec_norm[1,])
max(rec_norm[1,])
normalize <- function(x){
print(min(x))
print(max(x))
(x - min(x)) / (max(x) - min(x)) * 255
}
rec_norm <- apply(rec, MARGIN = 1, FUN = normalize)
min(rec[1,])
max(rec[1,])
normalize <- function(x){
print(min(x))
print(max(x))
(x - min(x)) / (max(x) - min(x)) * 255
}
rec_norm <- apply(rec, MARGIN = 1, FUN = normalize)
max(rec_norm[1,])
length(rec_norm[1,])
length(rec_norm[,1])
max(rec_norm[,1])
min(rec_norm[,1])
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec <- apply(rec, MARGIN = 1, FUN = normalize)
temp <- matrix(rec[1,], nrow = 28, byrow = TRUE)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp)
temp <- matrix(train_x[index[1],], nrow = 28, byrow = TRUE)
image.plot(temp)
length(train_x[index[1],])
length(rec[,1])
typeof(rec[,1])
typeofh(train_x[index[1],])
typeof(train_x[index[1],])
as.double(train_x[index[1],])
length(as.double(train_x[index[1],]))
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE, nlevel=255)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE, nlevel=255)
image.plot(temp)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp)
?PCA
?reconst
?PCA
resPCA$eig
colors <- gray.colors(255)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
(255)
colors <- gray.colors(255)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE, col = colors)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
# Images reconstruction
rec <- reconst(resPCA, ncp = 5)
index <- c(2, 17, 6, 4, 20, 9, 19, 7, 24, 1)
rec <- rec[index,]
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec <- apply(rec, MARGIN = 1, FUN = normalize)
colors <- gray.colors(255)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
# Compute PCA
resPCA <- PCA(train_xy, quali.sup = label_col, scale.unit = FALSE, ncp = 50)
# Images reconstruction
rec <- reconst(resPCA)
index <- c(2, 17, 6, 4, 20, 9, 19, 7, 24, 1)
rec <- rec[index,]
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec <- apply(rec, MARGIN = 1, FUN = normalize)
colors <- gray.colors(255)
layout(matrix(c(1:20), ncol=2))
dev.off()
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
plot.PCA(resPCA, choix = "ind", habillage = label_col, label = NULL)
# Compute PCA
resPCA <- PCA(train_xy, quali.sup = label_col, scale.unit = FALSE)
# Images reconstruction
rec <- reconst(resPCA, ncp = 50)
index <- c(2, 17, 6, 4, 20, 9, 19, 7, 24, 1)
rec <- rec[index,]
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec <- apply(rec, MARGIN = 1, FUN = normalize)
colors <- gray.colors(255)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
resPCA$eig
resPCA$eig[,3]
plot(resPCA$eig[,3])
resPCA$eig
# Images reconstruction
rec <- reconst(resPCA, ncp = 84)
index <- c(2, 17, 6, 4, 20, 9, 19, 7, 24, 1)
rec <- rec[index,]
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec <- apply(rec, MARGIN = 1, FUN = normalize)
colors <- gray.colors(255)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
# Compute PCA
resPCA <- PCA(train_xy, quali.sup = label_col, scale.unit = FALSE, ncp = 50)
# Images reconstruction
rec <- reconst(resPCA)
index <- c(2, 17, 6, 4, 20, 9, 19, 7, 24, 1)
rec <- rec[index,]
normalize <- function(x){
(x - min(x)) / (max(x) - min(x)) * 255
}
rec <- apply(rec, MARGIN = 1, FUN = normalize)
colors <- gray.colors(255)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
dim(train_x)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(rec[,1], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[1],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
layout(matrix(c(1:20), ncol=2))
for(i in 1:length(index)){
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
}
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
for(i in 1:length(index)){
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
}
for(i in 1:length(index)){
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
readline(prompt="Press [enter] to continue")
}
resPCA$eig
plot(resPCA$eig[,3])
dev.off()
plot(resPCA$eig[,3])
for(i in 1:length(index)){
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
readline(prompt="Press [enter] to continue")
}
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image.plot(temp, col = colors, legend.only = FALSE)
image.plot(temp, col = colors, horizontal = FALSE)
image.plot(temp, col = colors, horizontal = TRUE)
image(temp, col = colors)
dev.off()
for(i in 1:length(index)){
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image.plot(temp, col = colors)
readline(prompt="Press [enter] to continue")
}
for(i in 1:length(index)){
layout(matrix(c(1:2), ncol=2))
temp <- matrix(rec[,i], nrow = 28, byrow = TRUE)
image(temp, col = colors)
temp <- matrix(as.double(train_x[index[i],]), nrow = 28, byrow = TRUE)
image(temp, col = colors)
readline(prompt="Press [enter] to continue")
}
plot(resPCA$eig[,3])
dev.off()
plot(resPCA$eig[,3])
resPCA$eig
